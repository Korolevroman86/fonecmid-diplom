
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;
	
	//НачалоДоработки
	//ВКМ_Вызывает метод заполнения документа на основании договора
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		ВКМ_ЗаполнитьНаОснованииДоговора(ДанныеЗаполнения);
	КонецЕсли;
	//КонецДоработки
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;
	
	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;

	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;
	
	//НачалоДоработки
	//ВКМ_Проверяет наличие остатка по регистру и создает движения 
	Движения.ВКМ_РаботыВыполненныеКлиенту.Записывать = Истина;
	Движения.ВКМ_РаботыВыполненныеКлиенту.Записать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_РаботыВыполненныеКлиентуОстатки.Клиент КАК Клиент,
	|	ВКМ_РаботыВыполненныеКлиентуОстатки.Договор КАК Договор,
	|	ВКМ_РаботыВыполненныеКлиентуОстатки.КоличествоЧасовОстаток КАК Количество,
	|	ВКМ_РаботыВыполненныеКлиентуОстатки.СуммаКОплатеОстаток КАК Сумма
	|ИЗ
	|	РегистрНакопления.ВКМ_РаботыВыполненныеКлиенту.Остатки(&Дата, Клиент = &Клиент
	|	И Договор = &Договор) КАК ВКМ_РаботыВыполненныеКлиентуОстатки";
	Запрос.УстановитьПараметр("Договор", Договор);
	Запрос.УстановитьПараметр("Дата",Дата);
	Запрос.УстановитьПараметр("Клиент",Контрагент);
	
	Результат = Запрос.Выполнить().Выбрать();

	Для Каждого ТекСтрокаУслуги Из Услуги Цикл
		Если ТекСтрокаУслуги.Номенклатура = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить() Тогда
			Если Результат.Следующий() Тогда
				Если Результат.Количество >= ТекСтрокаУслуги.Количество И Результат.Сумма >= ТекСтрокаУслуги.Сумма Тогда
				Движение = Движения.ВКМ_РаботыВыполненныеКлиенту.Добавить();
				Движение.Клиент = Контрагент;
				Движение.Договор =Договор;
				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
				Движение.КоличествоЧасов = ТекСтрокаУслуги.Количество;
				Движение.СуммаКОплате = ТекСтрокаУслуги.Сумма;
				Движение.Период = Дата;
				Движение.Регистратор = Ссылка;
				
				Иначе
				ОбщегоНазначения.СообщитьПользователю(СтрШаблон("Обнаружена разница между данными регистра остатков и данными документа по количеству услуги %1: %2 и сумме: %3", ТекСтрокаУслуги.Номенклатура, ТекСтрокаУслуги.Количество - Результат.Количество , ТекСтрокаУслуги.Сумма - Результат.Сумма));
				Отказ = Истина;
				КонецЕсли;
			Иначе
				ОбщегоНазначения.СообщитьПользователю(СтрШаблон("Клиенту уже выставлены акты за услугу: %1 в этом месяце.", ТекСтрокаУслуги.Номенклатура));
		        Отказ = Истина;	
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	//КонецДоработки	

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	               |	ЗаказПокупателя.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Товары,
	               |	ЗаказПокупателя.Услуги.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры


//Заполняет реквизиты на основании договора
Процедура ВКМ_ЗаполнитьНаОснованииДоговора(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Владелец КАК Контрагент,
	|	ДоговорыКонтрагентов.Ссылка КАК Договор,
	|	ДоговорыКонтрагентов.Организация КАК Организация
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.ВидДоговора = &ВидДоговора
	|	И ДоговорыКонтрагентов.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("ВидДоговора", Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонетскоеОбслуживание);
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	Основание = ДанныеЗаполнения;
	
	
КонецПроцедуры


//Заполняет номенклатурой табличную часть документа
Процедура ВКМ_ВыполнитьЗаполнение() Экспорт
	
	НоменклатураАбонПлата = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();
	
	НоменклатураРаботыСпециалиста = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();
	
	Если НоменклатураАбонПлата = Справочники.Номенклатура.ПустаяСсылка() Тогда
	    ОбщегоНазначения.СообщитьПользователю("Не заполнено значение константы - Номенклатура абонентская плата");
	    Возврат
	КонецЕсли;
	
	Если НоменклатураРаботыСпециалиста = Справочники.Номенклатура.ПустаяСсылка() Тогда   	
	    ОбщегоНазначения.СообщитьПользователю("Не заполнено значение константы - Номенклатура работы специалиста");
	    Возврат
    КонецЕсли;
	
	Услуги.Очистить();
	
	СуммаДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВКМ_СуммаАбонентскойПлаты", , );
	
	Если СуммаДоговора > 0 Тогда
		НоваяСтрока = Услуги.Добавить();
		НоваяСтрока.Номенклатура = НоменклатураАбонПлата;
		НоваяСтрока.Цена = СуммаДоговора;
		НоваяСтрока.Количество = 1;
		НоваяСтрока.Сумма = НоваяСтрока.Цена * НоваяСтрока.Количество;
	КонецЕсли;
	
	СуммаКоличествоОказанныхУслуг = ПолучитьУслугиЗаПериод();
	
	Если СуммаКоличествоОказанныхУслуг.Количество() > 0 Тогда
		НоваяСтрока = Услуги.Добавить();
		НоваяСтрока.Номенклатура = НоменклатураРаботыСпециалиста;
		НоваяСтрока.Количество = СуммаКоличествоОказанныхУслуг[0].Количество;
		НоваяСтрока.Сумма = СуммаКоличествоОказанныхУслуг[0].Сумма;
		НоваяСтрока.Цена = НоваяСтрока.Сумма/НоваяСтрока.Количество;
	КонецЕсли;
	Основание = Договор;
		 
КонецПроцедуры

//Получает перечень номенклатуры
//Возвращаемое значение:
//ТаблицаЗначений - Результат.
Функция ПолучитьУслугиЗаПериод() 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЕСТЬNULL(ВКМ_РаботыВыполненныеКлиентуОбороты.КоличествоЧасовПриход, 0) КАК Количество,
	|	ЕСТЬNULL(ВКМ_РаботыВыполненныеКлиентуОбороты.СуммаКОплатеПриход, 0) КАК Сумма
	|ИЗ
	|	РегистрНакопления.ВКМ_РаботыВыполненныеКлиенту.Обороты(&НачалоПериода, &КонецПериода,, Договор = &Договор
	|	И Клиент = &Клиент) КАК ВКМ_РаботыВыполненныеКлиентуОбороты";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Клиент", Контрагент);
	Запрос.УстановитьПараметр("Договор", Договор);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат
	
КонецФункции


#КонецОбласти

#КонецЕсли
