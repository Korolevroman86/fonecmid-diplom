#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


#Область ОбработчикиСобытий
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры


Процедура ОбработкаПроведения(Отказ, Режим)
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник.Представление КАК СотрудникПредставление
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(ПериодДействия = НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ)
	|	И Сотрудник В
	|		(ВЫБРАТЬ
	|			ВКМ_НачислениеЗаработнойПлатыНачислениеВыплат.Сотрудник
	|		ИЗ
	|			Документ.ВКМ_НачислениеЗаработнойПлаты.НачислениеВыплат КАК ВКМ_НачислениеЗаработнойПлатыНачислениеВыплат
	|		ГДЕ
	|			ВКМ_НачислениеЗаработнойПлатыНачислениеВыплат.Ссылка = &Ссылка)) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВКМ_НачислениеЗаработнойПлаты.НачислениеВыплат КАК
	|			ВКМ_НачислениеЗаработнойПлатыНачислениеВыплат
	|		ПО (ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник = ВКМ_НачислениеЗаработнойПлатыНачислениеВыплат.Сотрудник
	|		И ВКМ_ОсновныеНачисленияДанныеГрафика.ВидРасчета = ВКМ_НачислениеЗаработнойПлатыНачислениеВыплат.ВидВыплаты
	|		И ВКМ_ОсновныеНачисленияДанныеГрафика.База = ВКМ_НачислениеЗаработнойПлатыНачислениеВыплат.Начислено)
	|ГДЕ
	|	ВКМ_НачислениеЗаработнойПлатыНачислениеВыплат.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Дата",Дата );
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество()> 0 Тогда
	Для Каждого СтрокаТаблицы Из  Результат Цикл 
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон("В Документе для сотрудника %1, уже были произведены аналогичные начисления в текущем периоде",СтрокаТаблицы.СотрудникПредставление));	
		КонецЦикла;
		Отказ = Истина;
		Возврат
	КонецЕсли;
	
	СформироватьДвижения();
	
	ПолучитьРасчет();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьДвижения()
	
	ДвиженияОсновныеНачисления();
	ДвиженияУдержания();

КонецПроцедуры

Процедура ДвиженияОсновныеНачисления()
	
	Для Каждого СтрокаСотрудник из НачислениеВыплат Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		Движение.Активность  = Истина;
		Движение.ПериодРегистрации = Дата;
		Движение.ПериодДействияКонец = СтрокаСотрудник.ДатаОкончания;
		Движение.ПериодДействияНачало = СтрокаСотрудник.ДатаНачала;
		Движение.ВидРасчета = СтрокаСотрудник.ВидВыплаты;
		Движение.Сотрудник = СтрокаСотрудник.Сотрудник;
		Движение.База = СтрокаСотрудник.Начислено;	
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать();
		
КонецПроцедуры

Процедура ДвиженияУдержания()
	
	Таблица = НачислениеВыплат.Выгрузить();
	Таблица.Свернуть("Сотрудник");
	Для Каждого СтрокаСотрудник из Таблица Цикл
	Движение = Движения.ВКМ_Удержания.Добавить();
		Движение.Активность  = Истина;
		Движение.ПериодРегистрации = Дата;
		Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
		Движение.БазовыйПериодКонец = КонецМесяца(Дата);
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
		Движение.Сотрудник = СтрокаСотрудник.Сотрудник;				
	КонецЦикла;	
	
	Движения.ВКМ_Удержания.Записать();

КонецПроцедуры

Процедура ПолучитьРасчет()
	
	РасчетПоОсновнымНачислениям();
	
	РасчетПоУдержаниямДвиженияВзаиморасчеты();
   
КонецПроцедуры

Процедура РасчетПоОсновнымНачислениям()

    Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК
	|		ЗначениеФактическийПериодДействия,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодРегистрации,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.Показатель
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Регистратор) КАК
	|		ВКМ_ОсновныеНачисленияДанныеГрафика";
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
    Результат = Запрос.Выполнить().Выбрать();
    Пока Результат.Следующий() Цикл
    	Движение = Движения.ВКМ_ОсновныеНачисления[Результат.НомерСтроки - 1];
    	
    	Если Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпускные Тогда
    		 Движение.Результат = Движение.База * (Результат.ЗначениеФактическийПериодДействия - Результат.Показатель); 
      	Иначе
    	Движение.Результат = (Движение.База/Результат.ЗначениеПериодРегистрации * Результат.ЗначениеФактическийПериодДействия);
    	КонецЕсли;

    КонецЦикла;
    
    Движения.ВКМ_ОсновныеНачисления.Записать();
    
КонецПроцедуры	

Процедура РасчетПоУдержаниямДвиженияВзаиморасчеты()
	
 	Измерения = Новый Массив;
    Измерения.Добавить("Сотрудник");
    
    Запрос = Новый Запрос;
    Запрос.Текст  = "ВЫБРАТЬ
    |	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.Сотрудник,
    |	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
    |	ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.РезультатБаза, 0) КАК РезультатБаза
    |ИЗ
    |	РегистрРасчета.ВКМ_Удержания.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения,, Регистратор = &Регистратор) КАК
    |		ВКМ_УдержанияБазаВКМ_ОсновныеНачисления";
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("Измерения",Измерения );
	
	Результат = Запрос.Выполнить().Выбрать();
   	
	Пока Результат.Следующий() Цикл
    	Движение = Движения.ВКМ_Удержания[Результат.НомерСтроки - 1];
    	
    	Движение.Результат = Результат.РезультатБаза *0.13;
    	
    	ДвижениеРасчеты = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		ДвижениеРасчеты.Сотрудник = Движение.Сотрудник;
		ДвижениеРасчеты.ВидДвижения = ВидДвиженияНакопления.Приход;
		ДвижениеРасчеты.Период = Дата;
		ДвижениеРасчеты.Сумма = Результат.РезультатБаза - Движение.Результат;
   
    КонецЦикла;
   	
    Движения.ВКМ_Удержания.Записать();
    Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
КонецПроцедуры


#КонецОбласти


#КонецЕсли
	