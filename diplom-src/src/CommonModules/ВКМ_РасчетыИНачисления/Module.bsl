#Область СлужебныеПроцедурыИФункции

//Получает данные о видах выплат и их значениях
//Параметры:  
//   Ссылка - ЛюбаяСсылка - Объект
//   Дата - Дата
//   ВидВыплаты - Строка 
//Возвращаемое значение:
//   Число - ЗначениеВыплаты 
Функция ПолучитьТекущееЗначениеВыплаты(Ссылка,Дата, ВидВыплаты)Экспорт
	ЗначениеВыплаты = Неопределено;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад,
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот
	|ИЗ
	|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Дата, Сотрудник = &Сотрудник) КАК
	|		ВКМ_УсловияОплатыСотрудниковСрезПоследних";

	Запрос.УстановитьПараметр("Сотрудник", Ссылка);
	Запрос.УстановитьПараметр("Дата",Дата);
	
	Результат = Запрос.Выполнить().Выбрать();
	Если Не Результат.Следующий() Тогда
		Возврат ЗначениеВыплаты;
	КонецЕсли;
	
	Если ВидВыплаты = "ПроцентОтРабот" Тогда
	    ЗначениеВыплаты =  Результат.ПроцентОтРабот;
	Иначе
		ЗначениеВыплаты = Результат.Оклад;
	КонецЕсли;
	
	Возврат ЗначениеВыплаты
	
КонецФункции

//Проверяет работает или уволен сотрудник
//Параметры: 
//   Ссылка - ЛюбаяСсылка
//   Дата - Дата
//Возвращаемое значение: 
//   Булево - СтатусСотрудника 
Функция ПроверкаСтатусаСотрудника(Ссылка, Дата)Экспорт
	
	СтатусСотрудника = Ложь;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЕСТЬNULL(ВКМ_ПринятыеУволенныеСотрудникиСрезПоследних.ПринятУволен, ЛОЖЬ) КАК ПринятУволен
	|ИЗ
	|	РегистрСведений.ВКМ_ПринятыеУволенныеСотрудники.СрезПоследних(&Дата, Сотрудник = &Сотрудник) КАК
	|		ВКМ_ПринятыеУволенныеСотрудникиСрезПоследних";
	Запрос.УстановитьПараметр("Сотрудник", Ссылка);
	Запрос.УстановитьПараметр("Дата",Дата);
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда
	
	СтатусСотрудника = Результат.ПринятУволен;
	КонецЕсли;
	
	Возврат  СтатусСотрудника
	
КонецФункции


//Проверяет должность сотрудника
//Параметры: 
//   Ссылка - ЛюбаяСсылка
//Возвращаемое значение: 
//   Булево - Специалист
Функция ПроверитьДолжностьСотрудника(Ссылка)Экспорт
	
	Специалист = Истина;
	Должность = "Должность";
	ЗначениеДолжность = Перечисления.ВКМ_ДолжностиСотрудников.Специалист;
	ДолжностьСотрудника = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, Должность);
	Если ЗначениеДолжность <> ДолжностьСотрудника Тогда
		Специалист = Ложь;
	КонецЕсли;	
	Возврат Специалист
	
КонецФункции



//Получает данные из регистров ВКМ_ПринятыеУволенныеСотрудники, ВКМ_РаботыВыполненныеСотрудникомОстатки и
// ВКМ_УсловияОплатыСотрудниковСрезПоследних на дату
//Параметры: 
//   Дата - Дата
//Возвращаемое значение: 
//   ТаблицаЗначений - Результат
Функция ПолучитьДанныеОНачислениях(Дата) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ПринятыеУволенныеСотрудникиСрезПоследних1.Сотрудник КАК Сотрудник,
	|	ЕСТЬNULL(ВКМ_ПринятыеУволенныеСотрудникиСрезПоследних.ПринятУволен, ЛОЖЬ) КАК РаботаетНаНачалоПериода,
	|	ВКМ_ПринятыеУволенныеСотрудникиСрезПоследних1.ПринятУволен КАК РаботаетНаКонецПериода,
	|	ЕСТЬNULL(ВКМ_РаботыВыполненныеСотрудникомОстатки.СуммаКОплатеОстаток, 0) КАК ПроцентОтРабот,
	|	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад, 0) КАК Оклад,
	|	ВКМ_ПринятыеУволенныеСотрудникиСрезПоследних1.Период КАК ДатаПриемаУвольнения,
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(ВКМ_ГрафикОтпусковСрезПоследних.ДатаНачала) = МЕСЯЦ(&Дата)
	|			ТОГДА ВКМ_ГрафикОтпусковСрезПоследних.ДатаНачала
	|		ИНАЧЕ ВЫБОР
	|			КОГДА МЕСЯЦ(ВКМ_ГрафикОтпусковСрезПоследних.ДатаОкончания) = МЕСЯЦ(&Дата)
	|				ТОГДА НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ)
	|		КОНЕЦ
	|	КОНЕЦ КАК НачалоОтпуска,
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(ВКМ_ГрафикОтпусковСрезПоследних.ДатаОкончания) = МЕСЯЦ(&Дата)
	|			ТОГДА ВКМ_ГрафикОтпусковСрезПоследних.ДатаОкончания
	|		ИНАЧЕ ВЫБОР
	|			КОГДА МЕСЯЦ(ВКМ_ГрафикОтпусковСрезПоследних.ДатаНачала) = МЕСЯЦ(&Дата)
	|				ТОГДА КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
	|		КОНЕЦ
	|	КОНЕЦ КАК КонецОтпуска,
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(ВКМ_ГрафикОтпусковСрезПоследних.ДатаНачала) = МЕСЯЦ(&Дата)
	|		ИЛИ МЕСЯЦ(ВКМ_ГрафикОтпусковСрезПоследних.ДатаОкончания) = МЕСЯЦ(&Дата)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Отпуск,
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(ВКМ_ГрафикОтпусковСрезПоследних1.ДатаНачала) = МЕСЯЦ(&Дата)
	|			ТОГДА ВКМ_ГрафикОтпусковСрезПоследних1.ДатаНачала
	|		ИНАЧЕ ВЫБОР
	|			КОГДА МЕСЯЦ(ВКМ_ГрафикОтпусковСрезПоследних1.ДатаОкончания) = МЕСЯЦ(&Дата)
	|				ТОГДА НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ)
	|		КОНЕЦ
	|	КОНЕЦ КАК ЗаСвойСчетНачало,
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(ВКМ_ГрафикОтпусковСрезПоследних1.ДатаОкончания) = МЕСЯЦ(&Дата)
	|			ТОГДА ВКМ_ГрафикОтпусковСрезПоследних1.ДатаОкончания
	|		ИНАЧЕ ВЫБОР
	|			КОГДА МЕСЯЦ(ВКМ_ГрафикОтпусковСрезПоследних1.ДатаНачала) = МЕСЯЦ(&Дата)
	|				ТОГДА КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
	|		КОНЕЦ
	|	КОНЕЦ КАК ЗаСвойСчетОкончание,
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(ВКМ_ГрафикОтпусковСрезПоследних1.ДатаНачала) = МЕСЯЦ(&Дата)
	|		ИЛИ МЕСЯЦ(ВКМ_ГрафикОтпусковСрезПоследних1.ДатаОкончания) = МЕСЯЦ(&Дата)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьНеоплачиваемыйОтпуск
	|ИЗ
	|	РегистрСведений.ВКМ_ПринятыеУволенныеСотрудники.СрезПоследних(КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ),) КАК
	|		ВКМ_ПринятыеУволенныеСотрудникиСрезПоследних1
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_ПринятыеУволенныеСотрудники.СрезПоследних(НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ),) КАК
	|			ВКМ_ПринятыеУволенныеСотрудникиСрезПоследних
	|		ПО (ВКМ_ПринятыеУволенныеСотрудникиСрезПоследних1.Сотрудник = ВКМ_ПринятыеУволенныеСотрудникиСрезПоследних.Сотрудник)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВКМ_РаботыВыполненныеСотрудником.Остатки(&Дата,) КАК
	|			ВКМ_РаботыВыполненныеСотрудникомОстатки
	|		ПО (ВКМ_ПринятыеУволенныеСотрудникиСрезПоследних1.Сотрудник = ВКМ_РаботыВыполненныеСотрудникомОстатки.Сотрудник)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Дата,) КАК
	|			ВКМ_УсловияОплатыСотрудниковСрезПоследних
	|		ПО (ВКМ_ПринятыеУволенныеСотрудникиСрезПоследних1.Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_ГрафикОтпусков.СрезПоследних(&Дата, Оплачиваемый = ИСТИНА) КАК
	|			ВКМ_ГрафикОтпусковСрезПоследних
	|		ПО (ВКМ_ПринятыеУволенныеСотрудникиСрезПоследних1.Сотрудник = ВКМ_ГрафикОтпусковСрезПоследних.Сотрудник)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_ГрафикОтпусков.СрезПоследних(&Дата, Оплачиваемый = ЛОЖЬ) КАК
	|			ВКМ_ГрафикОтпусковСрезПоследних1
	|		ПО (ВКМ_ПринятыеУволенныеСотрудникиСрезПоследних1.Сотрудник = ВКМ_ГрафикОтпусковСрезПоследних1.Сотрудник)";
	Запрос.УстановитьПараметр("Дата",Дата);
    Результат = Запрос. Выполнить().Выгрузить();
      
Возврат Результат	
КонецФункции

//Получает данные из регистра ВКМ_ВзаиморасчетыССотрудниками на дату
//Параметры: 
//   Дата - Дата
//Возвращаемое значение: 
//   ТаблицаЗначений - Результат
Функция ПолучитьДанныеОВыплатахЗарплаты(Дата) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	|	ВКМ_ВзаиморасчетыССотрудникамиОстатки.Сотрудник КАК Сотрудник,
	|	ВКМ_ВзаиморасчетыССотрудникамиОстатки.СуммаОстаток КАК Сумма
	|ИЗ
	|	РегистрНакопления.ВКМ_ВзаиморасчетыССотрудниками.Остатки(&Дата,) КАК ВКМ_ВзаиморасчетыССотрудникамиОстатки";
	Запрос.УстановитьПараметр("Дата", Дата );
	Результат = Запрос.Выполнить().Выгрузить();
	
    Возврат Результат
	
КонецФункции

//Получает данные из регистра ВКМ_ОсновныеНачисления 
//Параметры: 
//   Ссылка - ЛюбаяСсылка
//   Дата - Дата
//Возвращаемое значение: 
//   Число - Результат
Функция ПолучитьНачисленияПоСотрудникуЗаГод(Ссылка, Дата) Экспорт
	
	Результат = 0;
	Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	СУММА(ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.Результат, 0)) КАК СуммаНачислений,
		|	СУММА(ВЫБОР
		|		КОГДА ВКМ_ОсновныеНачисленияДанныеГрафика.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ВКМ_Основныеначисления.Оклад)
		|			ТОГДА ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК КоличествоРабочихДней
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Сотрудник = &Сотрудник
		|	И ПериодРегистрации МЕЖДУ ДОБАВИТЬКДАТЕ(&Дата, МЕСЯЦ, -12) И НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ)) КАК
		|		ВКМ_ОсновныеНачисленияДанныеГрафика
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник";
	Запрос.УстановитьПараметр("Сотрудник", Ссылка);
	Запрос.УстановитьПараметр("Дата", Дата);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Результат = Выборка.СуммаНачислений/Выборка.КоличествоРабочихДней;
	КонецЕсли;
	Возврат Результат;
	
	
	
КонецФункции


#КонецОбласти
